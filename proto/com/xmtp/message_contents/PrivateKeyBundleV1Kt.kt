// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message_contents/private_key.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.xmtp.message_contents;

@kotlin.jvm.JvmName("-initializeprivateKeyBundleV1")
public inline fun privateKeyBundleV1(block: com.xmtp.message_contents.PrivateKeyBundleV1Kt.Dsl.() -> kotlin.Unit): com.xmtp.message_contents.PrivateKeyBundleV1 =
  com.xmtp.message_contents.PrivateKeyBundleV1Kt.Dsl._create(com.xmtp.message_contents.PrivateKeyBundleV1.newBuilder()).apply { block() }._build()
/**
 * ```
 * LEGACY: PrivateKeyBundleV1 wraps the identityKey and the preKeys
 * ```
 *
 * Protobuf type `xmtp.message_contents.PrivateKeyBundleV1`
 */
public object PrivateKeyBundleV1Kt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.xmtp.message_contents.PrivateKeyBundleV1.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.xmtp.message_contents.PrivateKeyBundleV1.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.xmtp.message_contents.PrivateKeyBundleV1 = _builder.build()

    /**
     * `.xmtp.message_contents.PrivateKey identity_key = 1 [json_name = "identityKey"];`
     */
    public var identityKey: com.xmtp.message_contents.PrivateKey
      @JvmName("getIdentityKey")
      get() = _builder.getIdentityKey()
      @JvmName("setIdentityKey")
      set(value) {
        _builder.setIdentityKey(value)
      }
    /**
     * `.xmtp.message_contents.PrivateKey identity_key = 1 [json_name = "identityKey"];`
     */
    public fun clearIdentityKey() {
      _builder.clearIdentityKey()
    }
    /**
     * `.xmtp.message_contents.PrivateKey identity_key = 1 [json_name = "identityKey"];`
     * @return Whether the identityKey field is set.
     */
    public fun hasIdentityKey(): kotlin.Boolean {
      return _builder.hasIdentityKey()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PreKeysProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     */
     public val preKeys: com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPreKeysList()
      )
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     * @param value The preKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPreKeys")
    public fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.add(value: com.xmtp.message_contents.PrivateKey) {
      _builder.addPreKeys(value)
    }
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     * @param value The preKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPreKeys")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.plusAssign(value: com.xmtp.message_contents.PrivateKey) {
      add(value)
    }
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     * @param values The preKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPreKeys")
    public fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.addAll(values: kotlin.collections.Iterable<com.xmtp.message_contents.PrivateKey>) {
      _builder.addAllPreKeys(values)
    }
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     * @param values The preKeys to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPreKeys")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.plusAssign(values: kotlin.collections.Iterable<com.xmtp.message_contents.PrivateKey>) {
      addAll(values)
    }
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     * @param index The index to set the value at.
     * @param value The preKeys to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPreKeys")
    public operator fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.set(index: kotlin.Int, value: com.xmtp.message_contents.PrivateKey) {
      _builder.setPreKeys(index, value)
    }
    /**
     * ```
     * all the known pre-keys, newer keys first,
     * ```
     *
     * `repeated .xmtp.message_contents.PrivateKey pre_keys = 2 [json_name = "preKeys"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPreKeys")
    public fun com.google.protobuf.kotlin.DslList<com.xmtp.message_contents.PrivateKey, PreKeysProxy>.clear() {
      _builder.clearPreKeys()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.xmtp.message_contents.PrivateKeyBundleV1.copy(block: com.xmtp.message_contents.PrivateKeyBundleV1Kt.Dsl.() -> kotlin.Unit): com.xmtp.message_contents.PrivateKeyBundleV1 =
  com.xmtp.message_contents.PrivateKeyBundleV1Kt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.xmtp.message_contents.PrivateKeyBundleV1OrBuilder.identityKeyOrNull: com.xmtp.message_contents.PrivateKey?
  get() = if (hasIdentityKey()) getIdentityKey() else null

