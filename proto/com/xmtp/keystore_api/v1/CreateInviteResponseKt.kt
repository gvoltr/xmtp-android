// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: keystore_api/v1/keystore.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.xmtp.keystore_api.v1;

@kotlin.jvm.JvmName("-initializecreateInviteResponse")
public inline fun createInviteResponse(block: com.xmtp.keystore_api.v1.CreateInviteResponseKt.Dsl.() -> kotlin.Unit): com.xmtp.keystore_api.v1.CreateInviteResponse =
  com.xmtp.keystore_api.v1.CreateInviteResponseKt.Dsl._create(com.xmtp.keystore_api.v1.CreateInviteResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * Response to a CreateInviteRequest
 * ```
 *
 * Protobuf type `xmtp.keystore_api.v1.CreateInviteResponse`
 */
public object CreateInviteResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.xmtp.keystore_api.v1.CreateInviteResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.xmtp.keystore_api.v1.CreateInviteResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.xmtp.keystore_api.v1.CreateInviteResponse = _builder.build()

    /**
     * `.xmtp.message_contents.ConversationReference conversation = 1 [json_name = "conversation"];`
     */
    public var conversation: com.xmtp.message_contents.ConversationReference
      @JvmName("getConversation")
      get() = _builder.getConversation()
      @JvmName("setConversation")
      set(value) {
        _builder.setConversation(value)
      }
    /**
     * `.xmtp.message_contents.ConversationReference conversation = 1 [json_name = "conversation"];`
     */
    public fun clearConversation() {
      _builder.clearConversation()
    }
    /**
     * `.xmtp.message_contents.ConversationReference conversation = 1 [json_name = "conversation"];`
     * @return Whether the conversation field is set.
     */
    public fun hasConversation(): kotlin.Boolean {
      return _builder.hasConversation()
    }

    /**
     * `bytes payload = 2 [json_name = "payload"];`
     */
    public var payload: com.google.protobuf.ByteString
      @JvmName("getPayload")
      get() = _builder.getPayload()
      @JvmName("setPayload")
      set(value) {
        _builder.setPayload(value)
      }
    /**
     * `bytes payload = 2 [json_name = "payload"];`
     */
    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.xmtp.keystore_api.v1.CreateInviteResponse.copy(block: com.xmtp.keystore_api.v1.CreateInviteResponseKt.Dsl.() -> kotlin.Unit): com.xmtp.keystore_api.v1.CreateInviteResponse =
  com.xmtp.keystore_api.v1.CreateInviteResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.xmtp.keystore_api.v1.CreateInviteResponseOrBuilder.conversationOrNull: com.xmtp.message_contents.ConversationReference?
  get() = if (hasConversation()) getConversation() else null

