// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: keystore_api/v1/keystore.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.xmtp.keystore_api.v1;

@kotlin.jvm.JvmName("-initializekeystoreError")
public inline fun keystoreError(block: com.xmtp.keystore_api.v1.KeystoreErrorKt.Dsl.() -> kotlin.Unit): com.xmtp.keystore_api.v1.KeystoreError =
  com.xmtp.keystore_api.v1.KeystoreErrorKt.Dsl._create(com.xmtp.keystore_api.v1.KeystoreError.newBuilder()).apply { block() }._build()
/**
 * ```
 * Wrapper class for errors from the Keystore API
 * ```
 *
 * Protobuf type `xmtp.keystore_api.v1.KeystoreError`
 */
public object KeystoreErrorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.xmtp.keystore_api.v1.KeystoreError.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.xmtp.keystore_api.v1.KeystoreError.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.xmtp.keystore_api.v1.KeystoreError = _builder.build()

    /**
     * `string message = 1 [json_name = "message"];`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * `string message = 1 [json_name = "message"];`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }

    /**
     * `.xmtp.keystore_api.v1.ErrorCode code = 2 [json_name = "code"];`
     */
    public var code: com.xmtp.keystore_api.v1.ErrorCode
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    public var codeValue: kotlin.Int
      @JvmName("getCodeValue")
      get() = _builder.getCodeValue()
      @JvmName("setCodeValue")
      set(value) {
        _builder.setCodeValue(value)
      }
    /**
     * `.xmtp.keystore_api.v1.ErrorCode code = 2 [json_name = "code"];`
     */
    public fun clearCode() {
      _builder.clearCode()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.xmtp.keystore_api.v1.KeystoreError.copy(block: com.xmtp.keystore_api.v1.KeystoreErrorKt.Dsl.() -> kotlin.Unit): com.xmtp.keystore_api.v1.KeystoreError =
  com.xmtp.keystore_api.v1.KeystoreErrorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

