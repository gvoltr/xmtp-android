// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: message_api/v1/message_api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.xmtp.message_api.v1;

@kotlin.jvm.JvmName("-initializepagingInfo")
public inline fun pagingInfo(block: com.xmtp.message_api.v1.PagingInfoKt.Dsl.() -> kotlin.Unit): com.xmtp.message_api.v1.PagingInfo =
  com.xmtp.message_api.v1.PagingInfoKt.Dsl._create(com.xmtp.message_api.v1.PagingInfo.newBuilder()).apply { block() }._build()
/**
 * ```
 * This is based off of the go-waku PagingInfo struct, but with the direction
 * changed to our SortDirection enum format
 * ```
 *
 * Protobuf type `xmtp.message_api.v1.PagingInfo`
 */
public object PagingInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.xmtp.message_api.v1.PagingInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.xmtp.message_api.v1.PagingInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.xmtp.message_api.v1.PagingInfo = _builder.build()

    /**
     * ```
     * Note: this is a uint32, while go-waku's pageSize is a uint64
     * ```
     *
     * `uint32 limit = 1 [json_name = "limit"];`
     */
    public var limit: kotlin.Int
      @JvmName("getLimit")
      get() = _builder.getLimit()
      @JvmName("setLimit")
      set(value) {
        _builder.setLimit(value)
      }
    /**
     * ```
     * Note: this is a uint32, while go-waku's pageSize is a uint64
     * ```
     *
     * `uint32 limit = 1 [json_name = "limit"];`
     */
    public fun clearLimit() {
      _builder.clearLimit()
    }

    /**
     * `.xmtp.message_api.v1.Cursor cursor = 2 [json_name = "cursor"];`
     */
    public var cursor: com.xmtp.message_api.v1.Cursor
      @JvmName("getCursor")
      get() = _builder.getCursor()
      @JvmName("setCursor")
      set(value) {
        _builder.setCursor(value)
      }
    /**
     * `.xmtp.message_api.v1.Cursor cursor = 2 [json_name = "cursor"];`
     */
    public fun clearCursor() {
      _builder.clearCursor()
    }
    /**
     * `.xmtp.message_api.v1.Cursor cursor = 2 [json_name = "cursor"];`
     * @return Whether the cursor field is set.
     */
    public fun hasCursor(): kotlin.Boolean {
      return _builder.hasCursor()
    }

    /**
     * `.xmtp.message_api.v1.SortDirection direction = 3 [json_name = "direction"];`
     */
    public var direction: com.xmtp.message_api.v1.SortDirection
      @JvmName("getDirection")
      get() = _builder.getDirection()
      @JvmName("setDirection")
      set(value) {
        _builder.setDirection(value)
      }
    public var directionValue: kotlin.Int
      @JvmName("getDirectionValue")
      get() = _builder.getDirectionValue()
      @JvmName("setDirectionValue")
      set(value) {
        _builder.setDirectionValue(value)
      }
    /**
     * `.xmtp.message_api.v1.SortDirection direction = 3 [json_name = "direction"];`
     */
    public fun clearDirection() {
      _builder.clearDirection()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.xmtp.message_api.v1.PagingInfo.copy(block: com.xmtp.message_api.v1.PagingInfoKt.Dsl.() -> kotlin.Unit): com.xmtp.message_api.v1.PagingInfo =
  com.xmtp.message_api.v1.PagingInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.xmtp.message_api.v1.PagingInfoOrBuilder.cursorOrNull: com.xmtp.message_api.v1.Cursor?
  get() = if (hasCursor()) getCursor() else null

